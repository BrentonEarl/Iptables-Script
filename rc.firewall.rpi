#!/bin/sh
#
# Iptables - Firewall Script for Slackware
# Used on my Raspberry Pi wireless router
#
###########
# Usage
###########
#
# Slackware systems
# Copy to /etc/rc.d/rc.firewall
# Execute 'chmod +x /etc/rc.d/rc.firewall'
# Start by executing '/etc/rc.d/rc.firewall'
#

IPTABLES='/usr/sbin/iptables'

WAN_NIC='ethx'

WIRED_NIC='ethx'
WIRED_GW='192.168.x.1'
WIRED_SUBNET='192.168.x.0/xx'

WLAN_NIC='wlanx'
WLAN_GW='192.168.xx.1'
WLAN_SUBNET='192.168.x.0/xx'

# Set SSH Service Port
SSH_PORT='22'

$IPTABLES -F
$IPTABLES -X
$IPTABLES -t nat -F
$IPTABLES -t nat -X

# Drop fragmented ICMP packates
$IPTABLES -A INPUT --fragment -p ICMP -j DROP

# Drop INVALID packets
$IPTABLES -A INPUT -m state --state INVALID -j DROP
$IPTABLES -A OUTPUT -m state -p icmp --state INVALID -j DROP

# Drop packets in state new that are not syn packets
$IPTABLES -A INPUT -p tcp ! --syn -m state --state NEW -j DROP

# Drop port scans
$IPTABLES -A INPUT -p tcp --tcp-flags ALL NONE -j DROP
$IPTABLES -A INPUT -p tcp --tcp-flags ALL ALL -j DROP
$IPTABLES -A INPUT -p tcp --tcp-flags ALL FIN,URG,PSH -j DROP
$IPTABLES -A INPUT -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP
$IPTABLES -A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
$IPTABLES -A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP

# Allow all from localhost
$IPTABLES -A INPUT -i lo -j ACCEPT
$IPTABLES -A OUTPUT -o lo -j ACCEPT

# Allow ICMP on $WIRED_SUBNET and $WLAN_SUBNET
$IPTABLES -A INPUT -p ICMP -s $WIRED_SUBNET -j ACCEPT
$IPTABLES -A INPUT -p ICMP -s $WLAN_SUBNET -j ACCEPT

### Services ###

# Serve DHCP on $WIRED_NIC and $WLAN_NIC
$IPTABLES -A INPUT -i $WIRED_NIC -p UDP --sport 67:68 --dport 67:68 -j ACCEPT
$IPTABLES -A INPUT -i $WIRED_NIC -p TCP --sport 67:68 --dport 67:68 -j ACCEPT
$IPTABLES -A INPUT -i $WLAN_NIC -p UDP --sport 67:68 --dport 67:68 -j ACCEPT
$IPTABLES -A INPUT -i $WLAN_NIC -p TCP --sport 67:68 --dport 67:68 -j ACCEPT

# Serve DNS on $WIRED_SUBNET $WLAN_SUBNET
$IPTABLES -A INPUT -p TCP -s $WIRED_SUBNET --destination-port 53 -j ACCEPT
$IPTABLES -A INPUT -p UDP -s $WIRED_SUBNET --destination-port 53 -j ACCEPT
$IPTABLES -A INPUT -p TCP -s $WLAN_SUBNET --destination-port 53 -j ACCEPT
$IPTABLES -A INPUT -p UDP -s $WLAN_SUBNET --destination-port 53 -j ACCEPT

# Serve SSH Everywhere, careful here
#$IPTABLES -A INPUT -p TCP -s 0/0 --destination-port $SSH_PORT -j ACCEPT

# Serve SSH ON $WLAN_SUBNET and $WIRED_SUBNET
$IPTABLES -A INPUT -p TCP -s $WLAN_SUBNET --destination-port $SSH_PORT -j ACCEPT
$IPTABLES -A INPUT -p TCP -s $WIRED_SUBNET --destination-port $SSH_PORT -j ACCEPT

# Serve HTTPD
#$IPTABLES -A INPUT -p TCP --destination-port 80 -j ACCEPT

# ACCEPT OUTBOUND NTP, required, Rpi does not include RTC
$IPTABLES -A OUTPUT -p udp --dport ntp -j ACCEPT

### End Services ###

# NAT Masquerading $WAN_NIC
$IPTABLES -t nat -A POSTROUTING -o $WAN_NIC -m state \
  --state NEW,ESTABLISHED,RELATED -j MASQUERADE

# Forward $WIRED_NIC / $WIRED_SUBNET to $WLAN_NIC / $WLAN_SUBNET
$IPTABLES -A FORWARD -i $WIRED_NIC -o $WLAN_NIC -s $WIRED_SUBNET -d $WLAN_SUBNET -j ACCEPT
$IPTABLES -A FORWARD -i $WLAN_NIC -o $WIRED_NIC -s $WLAN_SUBNET -d $WIRED_SUBNET -j ACCEPT

# ACCEPT INBOUND RELATED / ESTABLISHED Connections
$IPTABLES -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

# ACCEPT OUTBOUND NEW / RELATED / ESTABLISHED Connections
$IPTABLES -A OUTPUT -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT

# ACCEPT FORWARD NEW / RELATED / ESTABLISHED Connections
$IPTABLES -A FORWARD -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT

### Logging ###

# Log ICMP Fragments
#$IPTABLES -A INPUT -p ICMP --fragment -m limit --limit 3/minute \
#  --limit-burst 3 -j LOG --log-prefix "[ ICMP Fragment: ] "
# Log ICMP
#$IPTABLES -A INPUT -p ICMP -m limit --limit 3/minute \
#  --limit-burst 3 -j LOG --log-prefix "[ Ping detected: ] "

# LOG FORWARD
$IPTABLES -A FORWARD -m limit --limit 3/minute --limit-burst 3 -j LOG \
    --log-prefix "[ FORWARD DROPPED: ] "
# LOG INPUT
$IPTABLES -A INPUT -m limit --limit 3/minute --limit-burst 3 -j LOG \
    --log-prefix "[ INPUT DROPPED ] "
# LOG OUTPUT
$IPTABLES -A OUTPUT -m limit --limit 3/minute --limit-burst 3 -j LOG \
         --log-prefix "[ OUTPUT DROPPED: ] "

# For troubleshooting
#$IPTABLES -A FORWARD -j LOG --log-prefix "[ FORWARD DROPPED: ] "
#$IPTABLES -A INPUT -j LOG --log-prefix "[ INPUT DROPPED ] "
#$IPTABLES -A OUTPUT -j LOG  --log-prefix "[ OUTPUT DROPPED: ] "

# Drop everything else
$IPTABLES -A INPUT -j DROP
$IPTABLES -A OUTPUT -j DROP
$IPTABLES -A FORWARD -j DROP

# Backup rules to /etc/iptables.rules
/usr/sbin/iptables-save > /etc/iptables.rules
